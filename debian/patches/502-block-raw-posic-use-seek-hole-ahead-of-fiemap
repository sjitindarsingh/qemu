commit 7c15903789953ead14a417882657d52dc0c19a24
Author: Tony Breeds <tony@bakeyournoodle.com>
Date:   Fri Sep 26 09:14:12 2014 +1000

    block/raw-posix: use seek_hole ahead of fiemap
    
    try_fiemap() uses FIEMAP_FLAG_SYNC which has a significant performance
    impact.
    
    Prefer seek_hole() over fiemap() to avoid this impact where possible.
    seek_hole is more widely used and, arguably, has potential to be
    optimised in the kernel.
    
    Reported-By: Michael Steffens <michael_steffens@posteo.de>
    Signed-off-by: Tony Breeds <tony@bakeyournoodle.com>
    Cc: Kevin Wolf <kwolf@redhat.com>
    Cc: Markus Armbruster <armbru@redhat.com>
    Cc: Stefan Hajnoczi <stefanha@redhat.com>
    Cc: Max Reitz <mreitz@redhat.com>
    Cc: PÃ¡draig Brady <pbrady@redhat.com>
    Cc: Eric Blake <eblake@redhat.com>
    Reviewed-by: Eric Blake <eblake@redhat.com>
    Reviewed-by: Max Reitz <mreitz@redhat.com>
    Signed-off-by: Kevin Wolf <kwolf@redhat.com>

diff --git a/block/raw-posix.c b/block/raw-posix.c
index d672c73..eb76f0e 100644
--- a/block/raw-posix.c
+++ b/block/raw-posix.c
@@ -1571,9 +1571,9 @@ static int64_t coroutine_fn raw_co_get_block_status(BlockDriverState *bs,
 
     start = sector_num * BDRV_SECTOR_SIZE;
 
-    ret = try_fiemap(bs, start, &data, &hole, nb_sectors, pnum);
+    ret = try_seek_hole(bs, start, &data, &hole, pnum);
     if (ret < 0) {
-        ret = try_seek_hole(bs, start, &data, &hole, pnum);
+        ret = try_fiemap(bs, start, &data, &hole, nb_sectors, pnum);
         if (ret < 0) {
             /* Assume everything is allocated. */
             data = 0;
