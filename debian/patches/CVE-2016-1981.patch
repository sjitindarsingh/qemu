Description: eliminate infinite loops on out-of-bounds transfer start
Origin: other, https://lists.gnu.org/archive/html/qemu-devel/2016-01/msg03454.html

Index: qemu-2.5+dfsg/hw/net/e1000.c
===================================================================
--- qemu-2.5+dfsg.orig/hw/net/e1000.c	2015-12-12 07:16:02.000000000 -0500
+++ qemu-2.5+dfsg/hw/net/e1000.c	2016-02-01 09:36:03.646678845 -0500
@@ -908,7 +908,8 @@
          * bogus values to TDT/TDLEN.
          * there's nothing too intelligent we could do about this.
          */
-        if (s->mac_reg[TDH] == tdh_start) {
+        if (s->mac_reg[TDH] == tdh_start ||
+            tdh_start >= s->mac_reg[TDLEN] / sizeof(desc)) {
             DBGOUT(TXERR, "TDH wraparound @%x, TDT %x, TDLEN %x\n",
                    tdh_start, s->mac_reg[TDT], s->mac_reg[TDLEN]);
             break;
@@ -1165,7 +1166,8 @@
         if (++s->mac_reg[RDH] * sizeof(desc) >= s->mac_reg[RDLEN])
             s->mac_reg[RDH] = 0;
         /* see comment in start_xmit; same here */
-        if (s->mac_reg[RDH] == rdh_start) {
+        if (s->mac_reg[RDH] == rdh_start ||
+            rdh_start >= s->mac_reg[RDLEN] / sizeof(desc)) {
             DBGOUT(RXERR, "RDH wraparound @%x, RDT %x, RDLEN %x\n",
                    rdh_start, s->mac_reg[RDT], s->mac_reg[RDLEN]);
             set_ics(s, 0, E1000_ICS_RXO);
