Backport of:

From 00dbdaa9813ec9fbeb035d96a088a429b1231a93 Mon Sep 17 00:00:00 2001
From: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date: Wed, 11 Apr 2018 17:26:51 -0400
Subject: [PATCH v3] i386: Add bit(2) of SPEC_CTRL MSR support - SSBD

i386: Add bit(2) of SPEC_CTRL MSR support - Reduced Data Speculation

Now users can do:

cpu host,+spec-ctrl,+ssbd

to have both IBRS and SSBD support.

Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
---

v3: s/ssb/rds/
v4: s/spec_store_bypass/rds/
    s/MDD/Reduced Data Speculation/
v5: Rip it out of the builtin_x86_defs per Paolo's recommendation
    s/RDS/SSBD/

 target/i386/cpu.c | 22 +++++++++++-----------
 target/i386/cpu.h |  1 +
 2 files changed, 12 insertions(+), 11 deletions(-)

Index: qemu-2.5+dfsg/target-i386/cpu.c
===================================================================
--- qemu-2.5+dfsg.orig/target-i386/cpu.c	2018-05-17 10:02:32.850176483 -0400
+++ qemu-2.5+dfsg/target-i386/cpu.c	2018-05-17 10:03:07.062252904 -0400
@@ -274,7 +274,7 @@ static const char *cpuid_7_0_edx_feature
     NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
     NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
     NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-    NULL, NULL, "spec-ctrl", NULL, NULL, NULL, NULL, NULL,
+    NULL, NULL, "spec-ctrl", NULL, NULL, NULL, NULL, "ssbd",
 };
 
 static const char *cpuid_apm_edx_feature_name[] = {
Index: qemu-2.5+dfsg/target-i386/cpu.h
===================================================================
--- qemu-2.5+dfsg.orig/target-i386/cpu.h	2018-05-17 10:02:32.850176483 -0400
+++ qemu-2.5+dfsg/target-i386/cpu.h	2018-05-17 10:02:32.850176483 -0400
@@ -589,6 +589,7 @@ typedef uint32_t FeatureWordArray[FEATUR
 #define CPUID_7_0_EBX_AVX512ER (1U << 27) /* AVX-512 Exponential and Reciprocal */
 #define CPUID_7_0_EBX_AVX512CD (1U << 28) /* AVX-512 Conflict Detection */
 #define CPUID_7_0_EDX_SPEC_CTRL     (1U << 26) /* Speculation Control */
+#define CPUID_7_0_EDX_SPEC_CTRL_SSBD  (1U << 31) /* Speculative Store Bypass Disable */
 
 #define CPUID_8000_0008_EBX_IBPB    (1U << 12) /* Indirect Branch Prediction Barrier */
 
