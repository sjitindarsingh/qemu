From 98a2862809f353546c5e653575cee65a8c8619c9 Mon Sep 17 00:00:00 2001
From: Jan Vesely <jano.vesely@gmail.com>
Date: Mon, 18 Feb 2013 16:58:30 +0000
Subject: [PATCH 40/70] serial, omap_uart: Add support for fifo level regs

Signed-off-by: Jan Vesely <jano.vesely@gmail.com>
---
 hw/char/omap_uart.c      | 10 ++++++++++
 hw/char/serial.c         | 12 ++++++++++++
 include/hw/char/serial.h |  3 +++
 3 files changed, 25 insertions(+)

diff --git a/hw/char/omap_uart.c b/hw/char/omap_uart.c
index c2cf46a..5655963 100644
--- a/hw/char/omap_uart.c
+++ b/hw/char/omap_uart.c
@@ -177,6 +177,16 @@ static uint64_t omap_uart_read(void *opaque, hwaddr addr,
         return s->wkup;
     case 0x60:	/* CFPS (OMAP2) */
         return s->cfps;
+    case 0x64:  /* RXFIFO_LVL_REG (OMAP36xx) */
+        if (s->revision >= 0x52) {
+            return serial_rx_fifo_count(s->serial) & 0xff;
+        }
+        break;
+    case 0x68:  /* TXFIFO_LVL_REG (OMAP36xx) */
+        if (s->revision >= 0x52) {
+            return serial_tx_fifo_count(s->serial) & 0xff;
+        }
+        break;
     }
 
     OMAP_BAD_REG(addr);
diff --git a/hw/char/serial.c b/hw/char/serial.c
index 4334228..fe3ebf5 100644
--- a/hw/char/serial.c
+++ b/hw/char/serial.c
@@ -674,6 +674,18 @@ void serial_exit_core(SerialState *s)
     qemu_unregister_reset(serial_reset, s);
 }
 
+/* Get number of stored bytes in receive fifo. */
+unsigned serial_rx_fifo_count(SerialState *s)
+{
+    return fifo8_num(&s->recv_fifo);
+}
+
+/* Get number of stored bytes in transmit fifo. */
+unsigned serial_tx_fifo_count(SerialState *s)
+{
+    return fifo8_num(&s->xmit_fifo);
+}
+
 /* Change the main reference oscillator frequency. */
 void serial_set_frequency(SerialState *s, uint32_t frequency)
 {
diff --git a/include/hw/char/serial.h b/include/hw/char/serial.h
index bc6e493..7dbf34e 100644
--- a/include/hw/char/serial.h
+++ b/include/hw/char/serial.h
@@ -85,6 +85,9 @@ void serial_change_char_driver(SerialState *s, CharDriverState *chr);
 const MemoryRegionOps *serial_get_memops(enum device_endian end);
 qemu_irq *serial_get_irq(SerialState *s);
 
+unsigned serial_rx_fifo_count(SerialState *s);
+unsigned serial_tx_fifo_count(SerialState *s);
+
 /* legacy pre qom */
 SerialState *serial_init(int base, qemu_irq irq, int baudbase,
                          CharDriverState *chr, MemoryRegion *system_io);
-- 
1.8.5.2

