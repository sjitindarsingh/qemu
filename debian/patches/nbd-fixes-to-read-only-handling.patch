commit c8969eded252058e90e91f12f75f32aceae46ec9
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Nov 13 10:34:17 2012 +0100

    nbd: fixes to read-only handling
    
    We do not need BLKROSET if the kernel supports setting flags.
    Also, always do BLKROSET even for a read-write export, otherwise
    the read-only state remains "sticky" after the invocation of
    "qemu-nbd -r".
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

Index: qemu-1.2.0+dfsg/nbd.c
===================================================================
--- qemu-1.2.0+dfsg.orig/nbd.c	2012-10-18 23:38:42.000000000 -0500
+++ qemu-1.2.0+dfsg/nbd.c	2012-11-20 13:31:07.974407857 -0600
@@ -399,24 +399,23 @@
         return -serrno;
     }
 
-    if (flags & NBD_FLAG_READ_ONLY) {
-        int read_only = 1;
-        TRACE("Setting readonly attribute");
+    if (ioctl(fd, NBD_SET_FLAGS, flags) < 0) {
+        if (errno == ENOTTY) {
+            int read_only = (flags & NBD_FLAG_READ_ONLY) != 0;
+            TRACE("Setting readonly attribute");
 
-        if (ioctl(fd, BLKROSET, (unsigned long) &read_only) < 0) {
+            if (ioctl(fd, BLKROSET, (unsigned long) &read_only) < 0) {
+                int serrno = errno;
+                LOG("Failed setting read-only attribute");
+                return -serrno;
+            }
+        } else {
             int serrno = errno;
-            LOG("Failed setting read-only attribute");
+            LOG("Failed setting flags");
             return -serrno;
         }
     }
 
-    if (ioctl(fd, NBD_SET_FLAGS, flags) < 0
-        && errno != ENOTTY) {
-        int serrno = errno;
-        LOG("Failed setting flags");
-        return -serrno;
-    }
-
     TRACE("Negotiation ended");
 
     return 0;
