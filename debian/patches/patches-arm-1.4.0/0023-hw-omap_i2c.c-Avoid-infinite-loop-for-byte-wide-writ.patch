From 73380411f4593bc7d9a0dfcd5cc051d9f56566d2 Mon Sep 17 00:00:00 2001
From: Matt Waddel <matt.waddel@ubuntu.com>
Date: Mon, 18 Feb 2013 16:58:27 +0000
Subject: [PATCH 23/77] hw/omap_i2c.c: Avoid infinite loop for byte wide writes
 to registers

During byte wide writes the i2c write routine gets into an infinite loop.
The STP bit in the status register is not set so the i2c_end_transfer()
routine is never being called, even when the data buffer is empty.  Moving
the i2c_end_transfer() call outside the STP check seems to fix this problem.
---
 hw/omap_i2c.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/hw/omap_i2c.c b/hw/omap_i2c.c
index 6932484..c712c1e 100644
--- a/hw/omap_i2c.c
+++ b/hw/omap_i2c.c
@@ -141,8 +141,8 @@ static void omap_i2c_fifo_run(OMAPI2CState *s)
                 s->stat |= 1 << 2;                         /* ARDY */
         }
         if (!s->count_cur) {
+            i2c_end_transfer(s->bus);
             if ((s->control >> 1) & 1) {			/* STP */
-                i2c_end_transfer(s->bus);
                 s->control &= ~0x0602;     /* MST | TRX | STP */
                 s->count_cur = s->count;
             }
-- 
1.8.1.2

